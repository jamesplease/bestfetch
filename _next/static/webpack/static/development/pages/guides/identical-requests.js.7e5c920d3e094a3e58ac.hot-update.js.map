{"version":3,"file":"static/webpack/static/development/pages/guides/identical-requests.js.7e5c920d3e094a3e58ac.hot-update.js","sources":["webpack:///./pages/guides/identical-requests.js"],"sourcesContent":["import Lowlight from 'react-lowlight';\nimport Link from '../../components/link';\n\nexport default function DeduplicatingRequests() {\n  return (\n    <div className=\"page\">\n      <h1>Identical Requests</h1>\n      <p>\n        bestfetch's{' '}\n        <Link href=\"/guides/deduplicating-requests\">\n          <a>request deduplication</a>\n        </Link>{' '}\n        and{' '}\n        <Link href=\"/guides/caching-responses\">\n          <a>response caching</a>\n        </Link>{' '}\n        features work by determining which requests are <b>identical</b>. This\n        guide explains when requests are identical, and it also covers how you\n        can change this behavior.\n      </p>\n      <h2>Determining Identical Requests</h2>\n      <p>\n        This library looks at the following pieces of information about a\n        request:\n      </p>\n      <ul>\n        <li>The URL</li>\n        <li>The request body</li>\n        <li>\n          The request method (i.e.; <code>GET</code>)\n        </li>\n        <li>\n          The <code>responseType</code>\n        </li>\n      </ul>\n      <p>\n        bestfetch combines these pieces of information into a string called a{' '}\n        <code>requestKey</code>. Requests with the same <code>requestKey</code>{' '}\n        are identical.\n      </p>\n      <p>\n        This algorithm is exported from this library as{' '}\n        <Link href=\"/api-reference/get-request-key\">\n          <a>\n            <code>getRequestKey</code>\n          </a>\n        </Link>\n        .\n      </p>\n      <h2>\n        Specifying a <code>requestKey</code>\n      </h2>\n      <div className=\"advanced\">\n        <span className=\"emoji\">üíÅ‚Äç‚ôÄÔ∏è</span> <b>Heads up!</b> This is an advanced\n        API that few applications should ever need to use.\n      </div>\n      <p>\n        In rare situations, you may wish to have control over when two requests\n        are considered to be identical. You can do this by specifying the{' '}\n        <code>requestKey</code> when calling <code>bestfetch</code>.\n      </p>\n      <p>\n        By default, a <code>requestKey</code> is generated for you, but you may\n        pass your own to override this behavior.\n      </p>\n      <Lowlight\n        language=\"js\"\n        inline={false}\n        value={`bestfetch('/api/books/2', { requestKey: 'my-custom-key' })\n  .then(res => {\n    console.log('Received the book:', res);\n  });`}\n      />\n      <p>\n        Be careful when specifying your own request keys ‚Äì¬†it will affect both\n        request deduplication and response caching!\n      </p>\n    </div>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;A","sourceRoot":""}