{"version":3,"file":"static/webpack/static/development/pages/api-reference/response-cache.js.ad355a6a0e577ee0131a.hot-update.js","sources":["webpack:///./pages/api-reference/response-cache.js"],"sourcesContent":["import Lowlight from 'react-lowlight';\n\nexport default () => {\n  return (\n    <div className=\"page\">\n      <h1>\n        <code>responseCache</code>\n      </h1>\n      <p>\n        An object that allows direct read and write access to the response\n        cache.\n      </p>\n      <Lowlight\n        language=\"js\"\n        inline={false}\n        value={`import { responseCache } from 'bestfetch';`}\n      />\n      <p>\n        <code>responseCache</code> has the following methods:\n      </p>\n      <ul>\n        <li>\n          <b>\n            <code>get</code>\n          </b>\n        </li>\n        <li>\n          <b>\n            <code>set</code>\n          </b>\n        </li>\n        <li>\n          <b>\n            <code>has</code>\n          </b>\n        </li>\n        <li>\n          <b>\n            <code>delete</code>\n          </b>\n        </li>\n        <li>\n          <b>\n            <code>clear</code>\n          </b>\n        </li>\n        <li>\n          <b>\n            <code>useCachedResponse</code>\n          </b>\n        </li>\n      </ul>\n\n      <h2>\n        <code>get</code>\n      </h2>\n      <p>\n        Returns the response in the cache for a given <code>requestKey</code>.\n      </p>\n      <h3>Arguments</h3>\n      <ol>\n        <li>\n          <b>\n            <code>requestKey</code>\n          </b>\n          : The <code>requestKey</code> to delete from the cache.\n        </li>\n      </ol>\n      <h3>Returns</h3>\n      <p>\n        A <code>boolean</code> that is <code>true</code> when a response was\n        found and deleted from the cache, and <code>false</code> when a response\n        did not exist in the cache.\n      </p>\n      <h3>Example Usage</h3>\n      <Lowlight\n        language=\"js\"\n        inline={false}\n        value={`responseCache.delete('my-request-key')`}\n      />\n\n      <h2>\n        <code>has</code>\n      </h2>\n      <p>\n        Used to determine if a response exists in the cache for{' '}\n        <code>requestKey</code>.\n      </p>\n      <h3>Arguments</h3>\n      <ol>\n        <li>\n          <b>\n            <code>requestKey</code>\n          </b>\n          : The <code>requestKey</code> to check.\n        </li>\n      </ol>\n      <h3>Returns</h3>\n      <p>\n        A <code>boolean</code> representing whether or not a response exists in\n        the cache for <code>requestKey</code>.\n      </p>\n      <h3>Example Usage</h3>\n      <Lowlight\n        language=\"js\"\n        inline={false}\n        value={`responseCache.has('my-request-key')`}\n      />\n\n      <h2>\n        <code>delete</code>\n      </h2>\n      <p>\n        Used to delete a response from the cache for <code>requestKey</code>.\n      </p>\n      <h3>Arguments</h3>\n      <ol>\n        <li>\n          <b>\n            <code>requestKey</code>\n          </b>\n          : The <code>requestKey</code> to delete from the cache.\n        </li>\n      </ol>\n      <h3>Returns</h3>\n      <p>\n        A <code>boolean</code> that is <code>true</code> when a response was\n        found and deleted from the cache, and <code>false</code> when a response\n        did not exist in the cache.\n      </p>\n      <h3>Example Usage</h3>\n      <Lowlight\n        language=\"js\"\n        inline={false}\n        value={`responseCache.delete('my-request-key')`}\n      />\n\n      <h2>\n        <code>clear</code>\n      </h2>\n      <p>Removes all responses from the cache.</p>\n      <h3>Arguments</h3>\n      <p>This method does not accept any arguments.</p>\n      <h3>Returns</h3>\n      <p>This method does not return anything.</p>\n      <h3>Example Usage</h3>\n      <Lowlight language=\"js\" inline={false} value={`responseCache.clear()`} />\n    </div>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;A","sourceRoot":""}